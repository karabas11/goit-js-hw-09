{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EAEJF,EAAS,CAACH,WAAUC,UAGpBG,EAAO,CAACJ,WAAUC,S,GAEfA,E,KA5CI,CACXQ,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,WAG3BF,KAAKI,iBAAiB,UAG3B,SAAoBC,GAClBA,EAAIC,iBASJ,IARA,IAA8BC,EAAAF,EAAIG,cAAcC,SAAzCC,EAAuBH,EAAvBG,OAAQC,EAAeJ,EAAff,MAAOoB,EAAQL,EAARK,KAEhBC,EAAO,CACXH,OAAQA,EAAOI,MACftB,MAAOmB,EAAMG,MACbF,KAAMA,EAAKE,OAGLC,EAAI,EAAGA,GAAKF,EAAKH,OAAQK,GAAK,EAAE,CACtC,IAAMC,EAAWD,EACXE,EAAQC,OAAOL,EAAKrB,OAAS0B,QAAQF,EAAS,GAAGH,EAAKD,MAE5DtB,EAAc0B,EAAUC,GACrBE,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjB6B,EAAAjC,GAASkC,OAAOC,QAAQ,uBAAwCC,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAEvEiC,OAAM,SAAAL,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClB6B,EAAAjC,GAASkC,OAAOI,QAAQ,sBAAqCF,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  input: document.querySelector('input'),\n};\n\nrefs.form.addEventListener('submit', onFormData);\n// refs.buttonStart.addEventListener('click', onStart);\n\nfunction onFormData(evt) {\n  evt.preventDefault();\n  const {amount, delay, step} = evt.currentTarget.elements;\n\n  const data = {\n    amount: amount.value,\n    delay: delay.value,\n    step: step.value,\n  }\n\n  for(let i = 1; i <= data.amount; i += 1){\n    const position = i;\n    const delay = Number(data.delay) + Number((position-1)*data.step);\n    \n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    }\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject)=>{\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n      // Fulfill\n      resolve ({position, delay});\n      } else {\n      // Reject\n      reject({position, delay});\n      }\n      }, delay);\n  });\n};\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","input","addEventListener","evt","preventDefault","_elements","currentTarget","elements","amount","delay2","step","data","value","i","position1","delay1","Number","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.11c932be.js.map"}